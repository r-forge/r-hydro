
R version 3.0.0 (2013-04-03) -- "Masked Marvel"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(Hydro)
Loading required package: xts
Loading required package: zoo

Attaching package: 'zoo'

The following object is masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: sp
Warning message:
package 'sp' was built under R version 3.0.2 
> options(error = recover)
> library(spacetime)
Warning message:
package 'spacetime' was built under R version 3.0.2 
> 
> 
> #### Alternative 2
> # HMData as above
> 
> 
> 
> 
> # We could create the observations empty
> hmobs = HMData(Spatial = list(),
+ 	Temporal = list(),
+ 	SpatioTemporal = list()
+ )
> 
> # and add it to the HM-object:
> hm1 = HM(Obs = hmobs)
> 
> hm1
An object of class "HM"
Slot "Obs":
An object of class "HMData"
Slot "Spatial":
list()

Slot "Temporal":
list()

Slot "SpatioTemporal":
list()

Slot "Network":
list()

Slot "Dots":
list()


Slot "Pred":
NULL

Slot "Parameters":
list()

Slot "performance":
[1] NaN

Slot "control":
list()

> 
> # Alternatively fill it with data
> par = list(a = c(0,1), b = c(0.1,10), cc = c(-5,-1))
> sp = SpatialPoints(cbind(1:3,4:6))
> library(xts)
> time = as.xts(1:3,as.POSIXct(1:3, origin = "1970-01-01"))
> st = STF(sp, time)
> 
> hmobs2 = HMData(Spatial = list(precipitationGauges = sp),
+ SpatioTemporal = list(precipitation = st))
> 
> hm2 = HM(Obs = hmobs2)
> 
> hm2
An object of class "HM"
Slot "Obs":
An object of class "HMData"
Slot "Spatial":
$precipitationGauges
SpatialPoints:
     coords.x1 coords.x2
[1,]         1         4
[2,]         2         5
[3,]         3         6
Coordinate Reference System (CRS) arguments: NA 


Slot "Temporal":
list()

Slot "SpatioTemporal":
$precipitation
An object of class "STF"
Slot "sp":
SpatialPoints:
     coords.x1 coords.x2
[1,]         1         4
[2,]         2         5
[3,]         3         6
Coordinate Reference System (CRS) arguments: NA 

Slot "time":
                    [,1]
1970-01-01 00:00:01    1
1970-01-01 00:00:02    2
1970-01-01 00:00:03    3

Slot "endTime":
[1] "1970-01-01 00:00:02 CET" "1970-01-01 00:00:03 CET"
[3] "1970-01-01 00:00:04 CET"



Slot "Network":
list()

Slot "Dots":
list()


Slot "Pred":
NULL

Slot "Parameters":
list()

Slot "performance":
[1] NaN

Slot "control":
list()

> 
> Calib = HMData(Temporal = list(runoff = as.xts((1:10)/10,as.POSIXct(1:10, origin = "1970-01-01"))))
> 
> hm3 = HM(Obs = hmobs2,  Parameters = par)
> 
> hm3
An object of class "HM"
Slot "Obs":
An object of class "HMData"
Slot "Spatial":
$precipitationGauges
SpatialPoints:
     coords.x1 coords.x2
[1,]         1         4
[2,]         2         5
[3,]         3         6
Coordinate Reference System (CRS) arguments: NA 


Slot "Temporal":
list()

Slot "SpatioTemporal":
$precipitation
An object of class "STF"
Slot "sp":
SpatialPoints:
     coords.x1 coords.x2
[1,]         1         4
[2,]         2         5
[3,]         3         6
Coordinate Reference System (CRS) arguments: NA 

Slot "time":
                    [,1]
1970-01-01 00:00:01    1
1970-01-01 00:00:02    2
1970-01-01 00:00:03    3

Slot "endTime":
[1] "1970-01-01 00:00:02 CET" "1970-01-01 00:00:03 CET"
[3] "1970-01-01 00:00:04 CET"



Slot "Network":
list()

Slot "Dots":
list()


Slot "Pred":
NULL

Slot "Parameters":
$a
[1] 0 1

$b
[1]  0.1 10.0

$cc
[1] -5 -1


Slot "performance":
[1] NaN

Slot "control":
list()

> 
> 
> proc.time()
   user  system elapsed 
   2.01    0.10    2.30 
